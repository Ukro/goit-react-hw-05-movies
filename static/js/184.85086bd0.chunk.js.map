{"version":3,"file":"static/js/184.85086bd0.chunk.js","mappings":"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","sources":["components/EditorList/EditorList.jsx","components/Loader/Loader.jsx","components/MoviesPage/MoviesPage.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films &&\n        films.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <Oval\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from '../EditorList/EditorList';\n\nconst MoviesPage = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const queryMovie = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.elements.query.value.toLowerCase() });\n  };\n\n  useEffect(() => {\n    if (queryMovie) {\n      const onSearchMovie = async () => {\n        setLoading(true);\n        try {\n          const searchMovie = await api.fetchSearchByKeyword(queryMovie);\n          setSearchFilms(searchMovie);\n        } catch (error) {\n          console.log(error);\n        } finally {\n          setLoading(false);\n        }\n      };\n      onSearchMovie();\n    }\n  }, [queryMovie]);\n\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" autoFocus />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <Loader />}\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '6ed3fa3d24c2aaae4e7274db70c163cc';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetalis = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchByKeyword,\n  fetchMovieDetalis,\n  fetchActors,\n  fetchReviews,\n};\n\nexport default api;\n"],"names":["_ref","films","location","useLocation","_jsx","children","map","film","Link","to","concat","id","state","from","title","Oval","height","width","color","ariaLabel","_useState","useState","_useState2","_slicedToArray","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryMovie","get","useEffect","onSearchMovie","_asyncToGenerator","_regeneratorRuntime","_callee","searchMovie","_context","prev","next","api","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","onSubmit","event","preventDefault","query","target","elements","value","toLowerCase","type","name","autoFocus","Loader","EditorList","axios","API_KEY","fetchTrending","response","abrupt","data","results","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetalis","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}