{"version":3,"file":"static/js/247.e67886e7.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const onActorsOfMovie = async () => {\n      setLoading(true);\n      try {\n        const actors = await api.fetchActors(movieId);\n        setActors(actors);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    onActorsOfMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <ul>\n        {actors.map(actor => (\n          <li key={actor.id}>\n            <img\n              width=\"200px\"\n              src={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n              alt={actor.original_name}\n            />\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <Oval\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '6ed3fa3d24c2aaae4e7274db70c163cc';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetalis = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchByKeyword,\n  fetchMovieDetalis,\n  fetchActors,\n  fetchReviews,\n};\n\nexport default api;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","useEffect","onActorsOfMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_actors","_context","prev","next","api","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","children","_jsx","Loader","map","actor","width","src","profile_path","alt","original_name","name","character","id","Oval","height","color","ariaLabel","axios","API_KEY","fetchTrending","response","concat","abrupt","data","results","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetalis","_ref3","_callee3","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}