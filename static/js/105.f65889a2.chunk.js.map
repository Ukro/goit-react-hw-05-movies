{"version":3,"file":"static/js/105.f65889a2.chunk.js","mappings":"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","sources":["components/EditorList/EditorList.jsx","components/HomePage/HomePage.jsx","components/Loader/Loader.jsx","services/api.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {films &&\n        films.map(film => (\n          <li key={film.id}>\n            <Link to={`/movies/${film.id}`} state={{ from: location }}>\n              {film.title}\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","import React, { useEffect, useState } from 'react';\nimport EditorList from '../EditorList/EditorList';\nimport api from '../../services/api';\nimport Loader from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const FetchTrendingFilms = async () => {\n      setLoading(true);\n      try {\n        const trendingFilms = await api.fetchTrending();\n        setFilms(trendingFilms);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    FetchTrendingFilms();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {films && <EditorList films={films} />}\n      {loading && <Loader />}\n    </main>\n  );\n};\n\nexport default HomePage;\n","import { Oval } from 'react-loader-spinner';\n\nconst Loader = () => {\n        return <Oval\n    height=\"100\"\n    width=\"100\"\n    color='grey'\n    ariaLabel='loading'\n  />\n}\n    \nexport default Loader;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '6ed3fa3d24c2aaae4e7274db70c163cc';\n\nconst fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nconst fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nconst fetchMovieDetalis = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nconst fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  fetchTrending,\n  fetchSearchByKeyword,\n  fetchMovieDetalis,\n  fetchActors,\n  fetchReviews,\n};\n\nexport default api;\n"],"names":["_ref","films","location","useLocation","_jsx","children","map","film","Link","to","concat","id","state","from","title","_useState","useState","_useState2","_slicedToArray","setFilms","_useState3","_useState4","loading","setLoading","useEffect","FetchTrendingFilms","_asyncToGenerator","_regeneratorRuntime","_callee","trendingFilms","_context","prev","next","api","sent","t0","console","log","finish","stop","apply","arguments","_jsxs","EditorList","Loader","Oval","height","width","color","ariaLabel","axios","API_KEY","fetchTrending","response","abrupt","data","results","fetchSearchByKeyword","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetalis","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}